
import React, { Component } from 'react';
import {
  Platform,
  StyleSheet,

  View,
  StatusBar,
  ScrollView,
  ImageBackground,
  Modal,
  TouchableHighlight,
  Alert,
  DeviceEventEmitter,
  ToastAndroid,
  ActivityIndicator,
} from 'react-native';


import { Button, ThemeProvider, Image, Input, Overlay, ListItem , Header} from 'react-native-elements';

import AsyncStorage from '@react-native-community/async-storage';
var  PushNotification = require("react-native-push-notification");
import BackgroundFetch from "react-native-background-fetch";
import OTPTextView from 'react-native-otp-textinput';
import { createDrawerNavigator } from '@react-navigation/drawer';
import { NavigationContainer } from '@react-navigation/native';
import {
  useTheme,
  Avatar,
  Title,
FAB,
Appbar,
  Caption,
  Paragraph,
  Drawer,
  Text,
  Card,
  TouchableRipple,
  Switch
} from 'react-native-paper';


 import BannerAlert from './finalregalert'


 

export default class Home extends React.Component{

    constructor(props){
      super(props)
      this.state = {
        completeProfile : false,
        ref : null,
        isloading : true
      }
    
     
    
    }


   

async componentDidMount(){
  
var user = await AsyncStorage.getItem('phone');
this.setState({ref: user});
console.log(this.state.ref)


}
openNotif(){
  PushNotification.localNotification({
    /* Android Only Properties */
    id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    ticker: "My Notification Ticker", // (optional)
    autoCancel: true, // (optional) default: true
    largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
    smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
    bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
    subText: "This is a subText", // (optional) default: none

    title: "My Notification Title", // (optional)
    message: "My Notification Message", // (required)
   
})
}
    render(){
      return(
        <>
  { this.state.ref != null ?    <BannerAlert user={this.state.ref} /> : null }
      {  !this.state.isloading? <ActivityIndicator size="large" /> :
    
      <Button title="click" onPress={()=>{this.openNotif()}} />
      
       
       }
        </>
      
      )
    }
  }


